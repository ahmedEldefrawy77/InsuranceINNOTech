// <auto-generated />
using System;
using InsuranceINNOTech;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InsuranceINNOTech.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230717111635_first")]
    partial class first
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InsuranceINNOTech.Claims", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateCreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<string>("Discription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Expenses")
                        .IsRequired()
                        .HasColumnType("real");

                    b.Property<Guid>("dependentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("userId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("dependentId");

                    b.HasIndex("userId");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("InsuranceINNOTech.Dependent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid>("PlansId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Telephone")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("hospitalId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PlansId");

                    b.HasIndex("UserId");

                    b.HasIndex("hospitalId");

                    b.ToTable("Dependent");
                });

            modelBuilder.Entity("InsuranceINNOTech.Hospital", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Hospital");
                });

            modelBuilder.Entity("InsuranceINNOTech.HospitalPlan", b =>
                {
                    b.Property<Guid>("HospitalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("planId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("HospitalId", "planId");

                    b.HasIndex("planId");

                    b.ToTable("HospitalPlan");
                });

            modelBuilder.Entity("InsuranceINNOTech.Plans", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("InsuranceINNOTech.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 7, 17, 11, 16, 34, 975, DateTimeKind.Utc).AddTicks(5413));

                    b.Property<DateTime>("DateExAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("InsuranceINNOTech.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("UnKnown");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasDefaultValue("User");

                    b.Property<int?>("Telephone")
                        .HasColumnType("int");

                    b.Property<Guid?>("hospitalId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Mail")
                        .IsUnique();

                    b.HasIndex("hospitalId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("InsuranceINNOTech.UserPlans", b =>
                {
                    b.Property<Guid>("userId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("plainId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("userId", "plainId");

                    b.HasIndex("plainId");

                    b.ToTable("UserPlans");
                });

            modelBuilder.Entity("InsuranceINNOTech.Claims", b =>
                {
                    b.HasOne("InsuranceINNOTech.Dependent", "dependent")
                        .WithMany("claims")
                        .HasForeignKey("dependentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InsuranceINNOTech.User", "user")
                        .WithMany("claims")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("dependent");

                    b.Navigation("user");
                });

            modelBuilder.Entity("InsuranceINNOTech.Dependent", b =>
                {
                    b.HasOne("InsuranceINNOTech.Plans", "plans")
                        .WithMany("dependents")
                        .HasForeignKey("PlansId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InsuranceINNOTech.User", "user")
                        .WithMany("Dependents")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InsuranceINNOTech.Hospital", "hospital")
                        .WithMany("dependents")
                        .HasForeignKey("hospitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hospital");

                    b.Navigation("plans");

                    b.Navigation("user");
                });

            modelBuilder.Entity("InsuranceINNOTech.HospitalPlan", b =>
                {
                    b.HasOne("InsuranceINNOTech.Hospital", "hospital")
                        .WithMany("hospitalPlans")
                        .HasForeignKey("HospitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InsuranceINNOTech.Plans", "plans")
                        .WithMany("hospitalPlans")
                        .HasForeignKey("planId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hospital");

                    b.Navigation("plans");
                });

            modelBuilder.Entity("InsuranceINNOTech.RefreshToken", b =>
                {
                    b.HasOne("InsuranceINNOTech.User", "user")
                        .WithOne("RefreshToken")
                        .HasForeignKey("InsuranceINNOTech.RefreshToken", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("InsuranceINNOTech.User", b =>
                {
                    b.HasOne("InsuranceINNOTech.Hospital", "hospital")
                        .WithMany("users")
                        .HasForeignKey("hospitalId");

                    b.Navigation("hospital");
                });

            modelBuilder.Entity("InsuranceINNOTech.UserPlans", b =>
                {
                    b.HasOne("InsuranceINNOTech.Plans", "plan")
                        .WithMany("userPlan")
                        .HasForeignKey("plainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InsuranceINNOTech.User", "user")
                        .WithMany("userPlan")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("plan");

                    b.Navigation("user");
                });

            modelBuilder.Entity("InsuranceINNOTech.Dependent", b =>
                {
                    b.Navigation("claims");
                });

            modelBuilder.Entity("InsuranceINNOTech.Hospital", b =>
                {
                    b.Navigation("dependents");

                    b.Navigation("hospitalPlans");

                    b.Navigation("users");
                });

            modelBuilder.Entity("InsuranceINNOTech.Plans", b =>
                {
                    b.Navigation("dependents");

                    b.Navigation("hospitalPlans");

                    b.Navigation("userPlan");
                });

            modelBuilder.Entity("InsuranceINNOTech.User", b =>
                {
                    b.Navigation("Dependents");

                    b.Navigation("RefreshToken");

                    b.Navigation("claims");

                    b.Navigation("userPlan");
                });
#pragma warning restore 612, 618
        }
    }
}
